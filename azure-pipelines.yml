trigger:
  branches:
    include:
    - master
    - validate/*
  paths:
    exclude:
    - doc/
    - '*.md'
    - .vscode/

variables:
  TreatWarningsAsErrors: true
  DOTNET_SKIP_FIRST_TIME_EXPERIENCE: true
  BuildConfiguration: Release
  BuildPlatform: Any CPU
  #codecov_token: # Get a new one from https://codecov.io/
  #ci_feed: # find guid used by Azure DevOps Artifacts for the feed
  NUGET_PACKAGES: $(Agent.TempDirectory)/.nuget/packages


jobs:
- job: Windows
  pool:
    vmImage: windows-2019
  steps:
  - checkout: self
    clean: true

  - template: azure-pipelines/steps/install-nuget.yml
  - template: azure-pipelines/steps/restore-solution.yml

  - task: VSBuild@1
    displayName: 'Build'
    inputs:
      solution: '$(solution)'
      platform: '$(buildPlatform)'
      configuration: '$(buildConfiguration)'

  - task: PublishBuildArtifacts@1
    displayName: 'Publish Artifact: Windows'
    inputs:
      PathtoPublish: '$(build.artifactstagingdirectory)'
      ArtifactName: WindowsArtifacts


- job: macOS
  pool:
    vmImage: macOS 10.14
  steps:
  - checkout: self
    clean: true

  - template: azure-pipelines/steps/install-nuget.yml
  - template: azure-pipelines/steps/restore-solution.yml

  - task: VSBuild@1
    displayName: 'Build'
    inputs:
      solution: '$(solution)'
      platform: '$(buildPlatform)'
      configuration: '$(buildConfiguration)'

  - task: PublishBuildArtifacts@1
    displayName: 'Publish Artifact: Mac'
    inputs:
      PathtoPublish: '$(build.artifactstagingdirectory)'
      ArtifactName: MacArtifacts


- job: WrapUp
  dependsOn:
  - Windows
  - macOS
  pool:
    vmImage: Ubuntu 16.04
  condition: succeededOrFailed()
  steps:
  - checkout: self
    clean: true

  - template: azure-pipelines/steps/install-nuget.yml

  - task: DownloadBuildArtifacts@0
    displayName: 'Download build artifact WindowsArtifacts'
    inputs:
      artifactName: 'WindowsArtifacts'
      downloadPath: '$(Build.ArtifactsDirectory)'

  - task: DownloadBuildArtifacts@0
    displayName: 'Download build artifact MacArtifacts'
    inputs:
      artifactName: 'MacArtifacts'
      downloadPath: '$(Build.ArtifactsDirectory)'

  - task: NuGetCommand@2
    displayName: 'Make NuGet Package Release'
    inputs:
      command: pack
      feedsToUse: config
      packagesToPack: '.nuspec/*.nuspec'
      packDestination: '$(Build.ArtifactStagingDirectory)/nuget/release'

  - task: PublishBuildArtifacts@1
    displayName: 'Publish Artifact: nuget'
    inputs:
      PathtoPublish: '$(Build.ArtifactStagingDirectory)/nuget'
      ArtifactName: nuget
